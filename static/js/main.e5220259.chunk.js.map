{"version":3,"sources":["bank.jpg","components/AccountBalance.js","components/home.js","components/UserProfile.js","components/Login.js","components/Debit.js","components/Credit.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","bank","alt","className","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debit","createTable","currData","apiData","console","log","map","tabData","description","amount","date","id","createEntry","newEntry","index","handleDescription","newDesc","debit","handleAmount","newAmt","parseInt","handleDate","newDate","entry","push","balanceAddition","totalDebit","sentinel","a","axios","get","response","debitData","data","debitTotal","forEach","deb","dynamicBalance","Credit","credit","creditAddition","totalCredit","creditData","creditTotal","cre","dynamicCredit","App","logInInfo","newUser","currentUser","balanceInfo","newBalance","flagValue","balance","info","creditValue","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5220259.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bank.7c9a51bd.jpg\";","import React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n        <div>\n          <h2> Balance: {this.props.accountBalance}  </h2>\n        </div>\n    );\n  }\n}\n\nexport default AccountBalance;","import React, { Component } from 'react'\nimport bank from \"./../bank.jpg\"\nimport AccountBalance from './AccountBalance.js'\nimport {Link} from 'react-router-dom'\n    \n    class Home extends Component {\n      render() {\n        return (\n            <div>\n              <img src={bank} alt=\"bank\"/>\n                <h1>Bank of React</h1>\n               <Link className = \"links\" to=\"/userProfile\">User Profile</Link>\n               <Link className = \"links\" to=\"/login\">Login</Link>\n               <Link className = \"links\" to=\"/debit\">Debits</Link> \n               <Link className = \"links\" to = \"/credit\">Credits</Link> \n               <h1>Balance</h1> <br/>\n              <AccountBalance accountBalance = {this.props.accountBalance} />\n            </div>\n        );\n      }\n    }\n    \n    export default Home;","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <h1>User Profile</h1>\n          <Link className = \"links\" to = \"/\"> Return Home </Link>\n          <h2>Username: {this.props.userName}</h2>\n          <h2>Member Since: {this.props.memberSince}</h2>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","import React, { Component } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n\n  render () {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\"/>\n          </div>\n          <button>Log In</button><br/>\n          <Link className = \"links\" to=\"/\">Return Home</Link>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport AccountBalance from './AccountBalance.js'\n\nclass Debit extends Component{\n    constructor(){\n        super();\n        this.state = {\n            apiData:[],\n            totalDebit: 0,\n            sentinel: false,\n            debit:{\n                description: \"\",\n                amount: 0,\n                date: \"\"\n            },\n            newEntry : []\n        };\n    }\n\n\n    createTable = ()=>{\n       let currData = this.state.apiData;\n       console.log(currData);\n       let table = currData.map(tabData =>{\n           \n           return(\n                <tr key = {tabData.id}>\n                    <td>{tabData.description}</td>\n                    <td>{tabData.amount}</td>\n                    <td>{tabData.date}</td>\n                </tr>)\n       });\n\n        \n        return table;\n    }\n\n    createEntry = ()=>{\n        let currData = this.state.newEntry;\n        console.log(currData);\n        let table = currData.map((tabData, index) =>{\n            \n            return(\n                 <tr key = {index}>\n                     <td>{tabData.description}</td>\n                     <td>{tabData.amount}</td>\n                     <td>{tabData.date}</td>\n                 </tr>)\n        });\n \n         \n         return table;\n     }\n\n    async componentDidMount(){\n        try{\n            let response = await axios.get(\"https://moj-api.herokuapp.com/debits\");\n            let debitData = response.data\n            let debitTotal = 0;\n            debitData.forEach(deb => {\n                debitTotal += deb.amount;\n            })\n            this.setState({apiData: debitData, totalDebit:debitTotal });\n            this.props.dynamicBalance(this.state.totalDebit, this.state.sentinel);\n        }\n            \n        catch (error){\n            if(error.response){\n                console.log(error.response.data);\n            }\n        }\n    }\n\n    handleDescription = (e) => {\n       const newDesc = {...this.state.debit}\n       const inputField = e.target.name\n       const inputValue = e.target.value\n       newDesc[inputField] = inputValue\n       this.setState({debit: newDesc});\n    }\n\n    handleAmount = (e) => {\n        const newAmt = {...this.state.debit}\n       const inputField = e.target.name\n       let inputValue = e.target.value;\n       if(e.target.value){\n        inputValue = parseInt(e.target.value)\n       }\n       \n       newAmt[inputField] = inputValue;\n        this.setState({debit:newAmt});\n    }\n    handleDate = (e)=>{\n        const newDate = {...this.state.debit}\n        const inputField = e.target.name \n        const inputValue = e.target.value\n        newDate[inputField] = inputValue;\n        this.setState({debit:newDate});\n    }\n\n\n    handleSubmit = (e)=>{\n        e.preventDefault()\n        let entry = [...this.state.newEntry];\n        entry.push(this.state.debit);\n        this.props.balanceAddition(this.state.debit.amount);\n        this.setState({newEntry: entry});\n    }\n\n\n    render(){\n        \n        return(\n            <div>\n                <h1>Debits</h1>\n                <Link className = \"links\" to = \"/\"> Return Home </Link>\n                \n                <form onSubmit={this.handleSubmit}> \n                <div>\n                    <label htmlFor=\"description\">Description</label>\n                    <input type=\"text\" name=\"description\" onChange={this.handleDescription} value={this.state.debit.description} />\n                </div>\n                <div>\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input type=\"text\" name=\"amount\" onChange = {this.handleAmount} value = {this.state.debit.amount}/>\n                </div>\n                <div>\n                    <label htmlFor=\"date\">Date</label>\n                    <input type=\"date\" name=\"date\" onChange = {this.handleDate} value = {this.state.debit.date}/>\n                </div>\n                    <button>Add debit</button>\n                </form>\n                <table>\n                    <tbody>\n                        {this.createTable()}\n                        {this.createEntry()}\n                    </tbody>\n                    \n                </table>\n\n                <h1>Account Balance</h1> \n                <AccountBalance accountBalance = {this.props.accountBalance}/>\n            </div>\n        );\n    }\n}\nexport default Debit;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport AccountBalance from './AccountBalance.js'\n\nclass Credit extends Component{\n    constructor(){\n        super();\n        this.state = {\n            apiData:[],\n            totalCredit: 0,\n            sentinel: false,\n\n            credit:{\n                description: \"\",\n                amount: \"\",\n                date: \"\"\n            },\n            newEntry : []\n        };\n    }\n    createTable = ()=>{\n        let currData = this.state.apiData;\n        console.log(currData);\n        let table = currData.map(tabData =>{\n            \n            return(\n                 <tr key = {tabData.id}>\n                     <td>{tabData.description}</td>\n                     <td>{tabData.amount}</td>\n                     <td>{tabData.date}</td>\n                 </tr>)\n        });\n \n         \n         return table;\n     }\n     createEntry = ()=>{\n        let currData = this.state.newEntry;\n        console.log(currData);\n        let table = currData.map((tabData, index) =>{\n            \n            return(\n                 <tr key = {index}>\n                     <td>{tabData.description}</td>\n                     <td>{tabData.amount}</td>\n                     <td>{tabData.date}</td>\n                 </tr>)\n        });\n \n         \n         return table;\n     }\n     \n\n     async componentDidMount(){\n        try{\n            let response = await axios.get(\"https://moj-api.herokuapp.com/credits\");\n            let creditData = response.data\n            let creditTotal = 0;\n            creditData.forEach(cre => {\n                creditTotal += cre.amount;\n            })\n            this.setState({apiData: creditData, totalCredit: creditTotal });\n            this.props.dynamicCredit(this.state.totalCredit, this.state.sentinel);\n        }\n            \n        catch (error){\n            if(error.response){\n                console.log(error.response.data);\n            }\n        }\n    }\n\n    handleDescription = (e) => {\n        const newDesc = {...this.state.credit}\n        const inputField = e.target.name\n        const inputValue = e.target.value\n        newDesc[inputField] = inputValue\n        this.setState({credit: newDesc});\n     }\n \n     handleAmount = (e) => {\n         const newAmt = {...this.state.credit}\n        const inputField = e.target.name\n        let inputValue = e.target.value;\n        if(e.target.value){\n            inputValue = parseInt(e.target.value)\n       }\n        newAmt[inputField] = inputValue;\n         this.setState({credit:newAmt});\n     }\n     handleDate = (e)=>{\n         const newDate = {...this.state.credit}\n         const inputField = e.target.name \n         const inputValue = e.target.value\n         newDate[inputField] = inputValue;\n         this.setState({credit:newDate});\n     }\n\n     handleSubmit = (e)=>{\n        e.preventDefault()\n        let entry = [...this.state.newEntry];\n        entry.push(this.state.credit);\n        this.props.creditAddition(this.state.credit.amount);\n        this.setState({newEntry: entry});\n    }\n    \n    render(){\n        return(\n            <div>\n                <h1>Credits</h1>\n                <Link className=\"links\" to = \"/\"> Return Home </Link>\n                \n                <form onSubmit={this.handleSubmit}> \n                <div>\n                    <label htmlFor=\"description\">Description</label>\n                    <input type=\"text\" name=\"description\" onChange={this.handleDescription} value={this.state.credit.description} />\n                </div>\n                <div>\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input type=\"text\" name=\"amount\" onChange = {this.handleAmount} value = {this.state.credit.amount}/>\n                </div>\n                <div>\n                    <label htmlFor=\"date\">Date</label>\n                    <input type=\"date\" name=\"date\" onChange = {this.handleDate} value = {this.state.credit.date}/>\n                </div>\n\n                    <button>Add Credit</button>\n                </form>\n                <table>\n                    <tbody>\n                        {this.createTable()}\n                        {this.createEntry()}\n                    </tbody>\n                    \n                </table>\n\n                <h1>Account Balance</h1> \n                <AccountBalance accountBalance = {this.props.accountBalance}/>\n            </div>\n        );\n    }\n}\nexport default Credit;","import {HashRouter as Router, Route,Switch} from 'react-router-dom';\nimport Home from './components/home.js'\nimport './App.css';\nimport React, {Component} from 'react'\nimport UserProfile from './components/UserProfile.js'\nimport LogIn from './components/Login'\nimport Debit from './components/Debit'\nimport Credit from './components/Credit'\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {accountBalance : 0,\n      creditValue: true, // Work around so that it only renders the total credit amount from the api call only once\n      currentUser: {\n                    userName: 'joe_shmo',\n                    memberSince: '07/23/96'\n                  },\n      flagValue : true, // Work around so that it only renders the total debit amount from the api call only once\n      \n      };\n  }\n\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  dynamicBalance = (balanceInfo, sentinel)=>{\n    let newBalance = this.state.accountBalance\n    newBalance = newBalance - balanceInfo;\n    if(this.state.flagValue){\n      this.setState({accountBalance : newBalance, flagValue:sentinel})\n    }\n  }\n  \n  balanceAddition = (balance) =>{\n    let newBalance = this.state.accountBalance\n    newBalance = newBalance - balance;\n    this.setState({accountBalance: newBalance});\n  }\n\n\n  dynamicCredit = (info, sentinel) =>{\n    let newBalance = this.state.accountBalance\n    newBalance = newBalance + info;\n    if(this.state.creditValue){\n      this.setState({accountBalance : newBalance, creditValue:sentinel});\n    }\n  }\n\n  creditAddition = (balance) =>{\n    let newBalance = this.state.accountBalance\n    newBalance = newBalance + balance;\n    this.setState({accountBalance: newBalance});\n  }\n  \n\n  render(){\n    const HomeComponent = () => (<Home accountBalance = {this.state.accountBalance} />);\n    const UserProfileComponent = () => (<UserProfile userName = {this.state.currentUser.userName} memberSince = {this.state.currentUser.memberSince} />);\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />);\n    const DebitComponent = () => (<Debit dynamicBalance = {this.dynamicBalance} accountBalance = {this.state.accountBalance} balanceAddition = {this.balanceAddition} />);\n    const CreditComponent = ()=>(<Credit dynamicCredit = {this.dynamicCredit} accountBalance = {this.state.accountBalance} creditAddition = {this.creditAddition} />);\n    return (\n      <Router>\n          <div>\n            <Switch>\n            <Route exact path=\"/\" render={HomeComponent}/>\n            <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n            <Route exact path=\"/login\" render={LogInComponent}/>\n            <Route exact path=\"/debit\" render={DebitComponent} />\n            <Route exact path=\"/credit\" render={CreditComponent} />\n            </Switch>\n          </div>\n        </Router>\n   );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}